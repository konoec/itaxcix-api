/**
 * Inicializador b√°sico para el m√≥dulo de Registro de Auditor√≠a
 * Solo maneja sidebar, topbar y perfil
 */

// Funci√≥n de inicializaci√≥n b√°sica del m√≥dulo de auditor√≠a
function initializeAuditRegistry() {
    console.log('üîç Inicializando m√≥dulo b√°sico de Auditor√≠a...');
    
    try {
        // Verificar dependencias b√°sicas
        console.log('=== VERIFICACI√ìN DE DEPENDENCIAS ===');
        console.log('- GlobalToast:', typeof window.GlobalToast !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible');
        console.log('- ProfileService:', typeof window.ProfileService !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible');
        console.log('- SidebarController:', typeof window.SidebarController !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible');
        console.log('- TopBarController:', typeof window.TopBarController !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible');
        console.log('- ProfileController:', typeof window.ProfileController !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible');
        
        // Verificar elementos del DOM
        console.log('=== VERIFICACI√ìN DE ELEMENTOS DOM ===');
        console.log('- Sidebar:', document.getElementById('sidebar') ? '‚úÖ Encontrado' : '‚ùå No encontrado');
        console.log('- Topbar:', document.querySelector('.top-bar') ? '‚úÖ Encontrado' : '‚ùå No encontrado');
        console.log('- Profile container:', document.getElementById('profile-container') ? '‚úÖ Encontrado' : '‚ùå No encontrado');
        console.log('- Close sidebar btn:', document.getElementById('close-sidebar') ? '‚úÖ Encontrado' : '‚ùå No encontrado');
        console.log('- Open sidebar btn:', document.getElementById('open-sidebar') ? '‚úÖ Encontrado' : '‚ùå No encontrado');
        
        // Inicializar controladores b√°sicos
        initializeBaseControllers();
        
        // Inicializar controlador espec√≠fico de auditor√≠a
        initializeAuditController();
        
        console.log('‚úÖ M√≥dulo b√°sico de Auditor√≠a inicializado correctamente');
        
    } catch (error) {
        console.error('‚ùå Error al inicializar m√≥dulo b√°sico de auditor√≠a:', error);
        console.error('Stack trace:', error.stack);
    }
}

/**
 * Inicializa los controladores base (sidebar, topbar, profile)
 */
function initializeBaseControllers() {
    console.log('‚öôÔ∏è Inicializando controladores base...');
    
    // Sidebar
    if (typeof SidebarController !== 'undefined' && !window.sidebarControllerInstance) {
        window.sidebarControllerInstance = new SidebarController();
        console.log('‚úÖ SidebarController inicializado');
    } else if (window.sidebarControllerInstance) {
        console.log('‚ÑπÔ∏è SidebarController ya estaba inicializado');
    } else {
        console.error('‚ùå SidebarController no disponible');
    }
    
    // Topbar
    if (typeof TopBarController !== 'undefined' && !window.topbarControllerInstance) {
        window.topbarControllerInstance = new TopBarController();
        console.log('‚úÖ TopBarController inicializado');
    } else if (window.topbarControllerInstance) {
        console.log('‚ÑπÔ∏è TopBarController ya estaba inicializado');
    } else {
        console.error('‚ùå TopBarController no disponible');
    }
    
    // Profile
    if (typeof ProfileController !== 'undefined' && !window.profileControllerInstance) {
        window.profileControllerInstance = new ProfileController();
        console.log('‚úÖ ProfileController inicializado');
    } else if (window.profileControllerInstance) {
        console.log('‚ÑπÔ∏è ProfileController ya estaba inicializado');
    } else {
        console.error('‚ùå ProfileController no disponible');
    }
}

/**
 * Inicializa el controlador espec√≠fico de auditor√≠a
 */
function initializeAuditController() {
    console.log('‚öôÔ∏è Inicializando controlador de auditor√≠a...');
    
    // Audit Registry Controller
    if (typeof AuditRegistryController !== 'undefined' && !window.auditController) {
        window.auditController = new AuditRegistryController();
        console.log('‚úÖ AuditRegistryController inicializado');
    } else if (window.auditController) {
        console.log('‚ÑπÔ∏è AuditRegistryController ya estaba inicializado');
    } else {
        console.error('‚ùå AuditRegistryController no disponible');
    }
}

// Auto-inicializaci√≥n cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ DOM cargado para m√≥dulo b√°sico de auditor√≠a');
    
    // Solo inicializar si estamos en la p√°gina de auditor√≠a
    if (window.location.pathname.includes('AuditRegistry.html')) {
        console.log('‚úÖ P√°gina de auditor√≠a detectada, iniciando m√≥dulo b√°sico...');
        
        // Esperar un momento para que se carguen las dependencias b√°sicas
        setTimeout(initializeAuditRegistry, 200);
    }
});

console.log('‚úÖ Audit Registry Initializer cargado');
